// Questão 1 degraus de escada..

Scanner entrada = new Scanner(System.in);

List<String> degraus = new ArrayList<>();

System.out.print("Digite a quantidade de vezes: ");

int qtdDegraus = entrada.nextInt();

for (int i = 0; i < qtdDegraus; i++) {

degraus.add(" ".repeat(qtdDegraus - i) + "*".repeat(i + 1));

}

for (String d : degraus ) {

System.out.println(d);

}

//Questão 2 da senha forte.

import java.util.Scanner;
        public class Senha {

        public static void main(String[] args) {
        int countMaiusculo = 0;
                int countMinusculo = 0;
                int countDigito = 0;
                int countCaractereEspecial = 0;
                System.out.print("Por favor, insira sua senha: ");
                Scanner sc = new Scanner(System.in);
                String senha = sc.next();
                if (senha.length() < 6) {
        int digitosRestantes = 6 - senha.length();
                System.out.printf("Sua senha ainda não é segura. ela possui menos de 6 dígitos, por favor, insira mais %d dígitos", digitosRestantes);
        }

        for (int i = 0; i < senha.length(); i++) {
        char c = senha.charAt(i);
                if (Character.isUpperCase(c)) {
        countMaiusculo += 1;
        }
        else if (Character.isLowerCase(c)) {
        countMinusculo += 1;
        }
        else if (Character.isDigit(c)) {
        countDigito += 1;
        }
        else if (senha.contains("!") || senha.contains("@") || senha.contains("#") || senha.contains("$") || senha.contains("%") || senha.contains("^") || senha.contains("&") || senha.contains("*") || senha.contains("(") || senha.contains(")") || senha.contains("-") || senha.contains("+")) {
        countCaractereEspecial += 1;
        }

        }

        if (countMaiusculo == 0) {
        System.out.println("Sua senha ainda não é segura. ela não possui letra maiúscula");
        }
        else if (countMinusculo == 0) {
        System.out.println("Sua senha ainda não é segura. ela não possui letra miúscula");
        }
        else if (countDigito == 0) {
        System.out.println("Sua senha ainda não é segura. ela não possui dígito");
        }
        else if (countCaractereEspecial == 0) {
        System.out.println("Sua senha ainda não é segura. ela não possui caractere especial");
        }
        else {
        System.out.println("Sua senha está segura!");
        }

        sc.close();
        }

        }

public static boolean validaSenha(String senha) {

String regex = "^(?=.*[0-9])"
        + "(?=.*[a-z])(?=.*[A-Z])"
        + "(?=.*[!@#$%^&*()-+])"
        + "(?=\\S+$).{6}$";
        Pattern p = Pattern.compile(regex);
        if (senha == null) {
return false;
}



Matcher m = p.matcher(senha);
        return m.matches();
}

public static void main(String[] args) {

Scanner scanner = new Scanner(System.in);
        System.out.println("Nome");
        String nome = scanner.next();
        System.out.println("Senha");
        String senha = scanner.next();
        System.out.println(validaSenha(senha));
}


}


//public static void main(String[] args) {

Locale.setDefault(Locale.US);
        Scanner scanner = new Scanner(System.in);
        System.out.println("n");
        double n = scanner.nextDouble();
        if (n == 1) {
System.out.println("     *");
}


//Questão 3 anagrama.
]
function isAnagrama(palavra1, palavra2){
// Cria um array de chaves de objeto
const palavra1Keys = Object.keys(palavra1) // an apple object becomes ["a", "p", "l", "e"] here
        const palavra2Keys = Object.keys(palavra2)

        // se o número de chaves for diferentes, os objetos não são equivalentes.
        if (palavra1Keys.length != palavra2Keys.length) {
return false
}

for (let i = 0; i < palavra1Keys.length; i++){
// se os valores dos objetos não são os mesmos, os objetos não são equivalentes
const value = palavra1Keys[i]
        if (a[value] !== palavra2[value]){
return false
}
}

// se nenhuma das instruções condicionais foi acionada, as strings são anagramas uma da outra
return true

        }
